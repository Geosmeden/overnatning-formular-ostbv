{"version":3,"sources":["AdresseList.js","DawaSearcher.js","ErrorComp.js","SuccessAlert.js","context/FormContext.js","components/TextInput.js","components/ImageUpload.js","components/DateInput.js","components/SelectInput.js","components/SubmitButton.js","Formular.js","service.js","App.js","reportWebVitals.js","index.js"],"names":["AdresseList","searchTerm","handleChoice","setTekst","komkode","useState","adresses","setAdresses","setDoSearch","useEffect","length","url","console","log","fetch","then","res","json","data","comps","map","item","index","ListItem","key","tekst","value","button","onClick","e","handleClick","ListItemText","primary","List","component","style","maxHeight","overflow","DawaSearcher","size","setAdressData","adresseTekst","setAdresseTekst","showAutocompleteList","setShowAutocompleteList","adgangsadresse","x","y","setItem","Grid","xs","TextField","id","InputLabelProps","shrink","label","Typography","variant","fullWidth","onChange","target","InputProps","endAdornment","InputAdornment","position","IconButton","Clear","useStyles","makeStyles","theme","root","width","marginTop","spacing","AlertComp","props","classes","errors","closeAlert","list","err","className","Alert","severity","onClose","SuccessAlert","ansoeger_mail","ansoeger_navn","ansoeger_tlf","ansoegn_indsendt","ansvarl_kontaktmail","ansvarl_kontaktpers","ansvarl_kontaktlf","overnat_adresse","overnat_postnr","overnat_by","overnat_antal","overnat_kommune","overnat_lokaler","overnat_navn","overnat_over_150","overnat_slut_dato","Date","overnat_slut_tid","overnat_start_dato","overnat_start_tid","overnat_tegning","overnat_tegning_filnavn","the_geom","x_coord","y_coord","overnat_kontaktpers","overnat_kontakttlf","bemaerkning","FormularContext","React","createContext","FormularProvider","state","setState","setValue","prevState","Provider","keyValues","Object","keys","forEach","k","children","TextInput","title","type","evtHandler","useContext","handleChange","ImageUpload","str","setImageSrc","fileRef","useRef","setValues","reader","FileReader","handleReaderLoaded","result","replace","color","htmlFor","display","name","accept","files","file","onload","readAsDataURL","ref","aria-label","current","click","Chip","substring","onDelete","DateInput","format","margin","date","startDate","slutDato","maxEndDate","setDate","getDate","endDate","maxEndDateSlut","endDateSlut","KeyboardButtonProps","cancelLabel","TimeInput","ampm","time","DateTimeInputs","kommuner","nummer","SelectInput","setKomkode","select","split","nr","option","MenuItem","SubmitButton","Button","flexGrow","paper","padding","textAlign","palette","text","secondary","formatedTimestamp","d","toISOString","toTimeString","Formular","resetForm","gid","schema","yup","shape","required","typeError","positive","integer","matches","email","formErrors","setFormErrors","successMessage","setSuccessMessage","utils","DateFnsUtils","locale","daLocale","Container","maxWidth","gutterBottom","container","adress","streetname","adressname","postnr","postnrnavn","Checkbox","checked","fontSize","href","formData","validate","abortEarly","valid","columns","join","values","buildQuery","toString","axios","post","postFormData","window","scrollTo","top","behavior","catch","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f8061b5.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nexport default function AdresseList({\n  searchTerm,\n  setTekst,\n  handleChoice,\n  komkode,\n}) {\n  const [adresses, setAdresses] = useState([]);\n  const [doSearch, setDoSearch] = useState(true);\n  const handleClick = (item) => {\n    // console.log(tekst);\n    //setTekst(tekst);\n    handleChoice(item);\n    setDoSearch(false);\n  };\n\n  useEffect(() => {\n    if (searchTerm.length < 3) return;\n    const url = `https://dawa.aws.dk/adgangsadresser/autocomplete?q=${searchTerm}&type=adgangsadresse&side=1&per_side=105&noformat=1&kommunekode=${komkode}&srid=25832`;\n    console.log(url);\n    fetch(url).then((res) => {\n      res.json().then((data) => {\n        setAdresses(data);\n      });\n    });\n  }, [searchTerm]);\n\n  let comps = adresses.map((item, index) => (\n    <ListItem\n      key={`${index}-${item.tekst}`}\n      value={item.tekst}\n      button\n      onClick={(e) => handleClick(item)}\n    >\n      <ListItemText primary={item.tekst} />\n    </ListItem>\n  ));\n\n  return (\n    <List component='nav' style={{ maxHeight: 400, overflow: \"auto\" }}>\n      {comps}\n    </List>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AdresseList from \"./AdresseList\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Clear, Delete } from \"@material-ui/icons\";\n\nexport default function DawaSearcher({\n  size,\n  setAdressData,\n  komkode,\n  adresseTekst,\n  setAdresseTekst,\n}) {\n  const [data, setData] = useState([]);\n  const [showAutocompleteList, setShowAutocompleteList] = useState(true);\n  const [tekst, setTekst] = useState(\"\");\n  const [_item, setItem] = useState({\n    tekst: \"\",\n    adgangsadresse: { x: \"\", y: \"\" },\n  });\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  /*\n     Called when inputing in the search box / adresse field\n\n     - setShowList : \n    */\n  const handleChange = (e) => {\n    setShowAutocompleteList(true);\n    setAdresseTekst(e.target.value);\n  };\n\n  const handleChoice = (item) => {\n    setShowAutocompleteList(false);\n    setItem(item);\n    setAdresseTekst(item.tekst);\n    setAdressData(item); // pass text and location to the parent component\n  };\n\n  return (\n    <Grid item xs={size}>\n      <TextField\n        id='standard-basic'\n        InputLabelProps={{ shrink: true }}\n        label={\n          <Typography variant='h6' component='h3'>\n            Overnatningstedets adresse\n          </Typography>\n        }\n        fullWidth\n        value={adresseTekst}\n        onChange={handleChange}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position='end'>\n              <IconButton\n                onClick={(e) => {\n                  setAdresseTekst(\"\");\n                  setAdressData(\"\");\n                  setShowAutocompleteList(false);\n                }}\n              >\n                <Clear />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n      {showAutocompleteList && (\n        <AdresseList\n          searchTerm={adresseTekst}\n          setTekst={setAdresseTekst}\n          handleChoice={handleChoice}\n          komkode={komkode}\n        />\n      )}\n    </Grid>\n  );\n}\n","import React from 'react';\nimport Alert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';  \nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n  }));\n\nexport default function AlertComp(props){\n    const classes = useStyles();\n    const {errors, closeAlert} = props;\n    const list = <ul>\n        {\n            errors.map((err, index) => <li key={index}>{err}</li>)\n        }\n    </ul>;\n    return (\n        <div className={classes.root}>\n            <Alert severity=\"error\" onClose={() => closeAlert([])}>{list}</Alert>\n        </div>\n    );\n}","import React from \"react\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function SuccessAlert(props) {\n  const classes = useStyles();\n  const { closeAlert } = props;\n\n  return (\n    <div className={classes.root}>\n      <Alert severity='success' onClose={() => closeAlert(false)}>\n        Formular er sendt\n      </Alert>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\r\n\r\nlet data = {\r\n  ansoeger_mail: \"\",\r\n  ansoeger_navn: \"\",\r\n  ansoeger_tlf: \"\",\r\n  ansoegn_indsendt: \"\",\r\n  ansvarl_kontaktmail: \"\",\r\n  ansvarl_kontaktpers: \"\",\r\n  ansvarl_kontaktlf: \"\",\r\n  overnat_adresse: \"\",\r\n  overnat_postnr: \"\",\r\n  overnat_by: \"\",\r\n  overnat_antal: \"\",\r\n  overnat_kommune: \"\",\r\n  overnat_lokaler: \"\",\r\n  overnat_navn: \"\",\r\n  overnat_over_150: false,\r\n  overnat_slut_dato: new Date(),\r\n  overnat_slut_tid: new Date(),\r\n  overnat_start_dato: new Date(),\r\n  overnat_start_tid: new Date(),\r\n  overnat_tegning: \"\",\r\n  overnat_tegning_filnavn: \"\",\r\n  the_geom: \"\",\r\n  x_coord: \"\",\r\n  y_coord: \"\",\r\n  overnat_kontaktpers: \"\",\r\n  overnat_kontakttlf: \"\",\r\n  bemaerkning: \"\",\r\n};\r\n\r\nconst FormularContext = React.createContext([{}, () => {}, () => {}, () => {}]);\r\n\r\nconst FormularProvider = (props) => {\r\n  const [state, setState] = useState(data);\r\n  const [imageSrc, setImageSrc] = useState(\"\");\r\n  const setValue = (key, value) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [key]: value,\r\n    }));\r\n  };\r\n\r\n  const resetForm = () => setState(data);\r\n\r\n  const setValues = (keyValues) => {\r\n    Object.keys(keyValues).forEach((k) => {\r\n      setValue(k, keyValues[k]);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FormularContext.Provider value={[state, setValue, setValues, resetForm]}>\r\n      {props.children}\r\n    </FormularContext.Provider>\r\n  );\r\n};\r\n\r\nexport { FormularContext, FormularProvider };\r\n","import React, { useContext } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FormularContext } from \"../context/FormContext\";\n\nexport default function TextInput(props) {\n  const { size, id, title, type, evtHandler } = props;\n  const [state, setValue, setValues] = useContext(FormularContext);\n  const handleChange = (e, id) => {\n    setValue(id, e.target.value);\n  };\n\n  return (\n    <Grid item xs={size}>\n      <TextField\n        id={id}\n        type={type || \"text\"}\n        value={state[id]}\n        InputLabelProps={{ shrink: true }}\n        label={\n          <Typography variant='h6' component='h3'>\n            {title}\n          </Typography>\n        }\n        onChange={(e) => handleChange(e, id)}\n        fullWidth\n      />\n    </Grid>\n  );\n}\n","import React, { useContext, useRef } from \"react\";\r\nimport { Grid, Chip, Typography, IconButton } from \"@material-ui/core\";\r\nimport PhotoCameraIcon from \"@material-ui/icons/CloudUploadRounded\";\r\nimport { FormularContext } from \"../context/FormContext\";\r\n\r\nconst _substr = (str) => {\r\n  if (str.length > 25) {\r\n    return \"...\" + str.substring(str.length - 22);\r\n  }\r\n  return str;\r\n};\r\n\r\nexport default function ImageUpload({ setImageSrc }) {\r\n  const fileRef = React.useRef(null);\r\n  const [state, setValue, setValues] = useContext(FormularContext);\r\n  const { overnat_tegning_filnavn } = state;\r\n  const deleteImage = () => {\r\n    setValues({\r\n      // imageSrc: \"\",\r\n      overnat_tegning_filnavn: \"\",\r\n    });\r\n    fileRef.current.value = \"\";\r\n    setImageSrc(\"\");\r\n  };\r\n\r\n  const reader = new FileReader();\r\n  const handleImageUpload = (e) => {\r\n    console.log(\"file upload: \", e.target.files[0].name);\r\n    let file = e.target.files[0];\r\n    let name = e.target.files[0].name;\r\n    // fileName = name;\r\n\r\n    setValue(\"overnat_tegning_filnavn\", e.target.files[0].name);\r\n\r\n    if (file) {\r\n      reader.onload = handleReaderLoaded;\r\n      // reader.readAsBinaryString(file);\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleReaderLoaded = (e) => {\r\n    let binaryString = e.target.result;\r\n    console.log(\"before setImageSrc\");\r\n    setImageSrc(reader.result);\r\n    setValue(\"overnat_tegning\", reader.result.replace(/^data:.+;base64,/, \"\"));\r\n    // setData({\r\n    //   ...data,\r\n    //   overnat_tegning : btoa(binaryString)\r\n    // });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid item xs={10}>\r\n        <Typography\r\n          style={{ color: \"rgba(0, 0, 0, 0.74)\" }}\r\n          variant='subtitle1'\r\n          component='h3'\r\n        >\t\t\r\n          Vedhæft dokumentation: Der kan her vedhæftes driftsjournal og belægningsplan {\" \"}\r\n        </Typography>\r\n      </Grid>\r\n      \r\n\t  <Grid item xs={2}>\r\n        <label htmlFor='upload-photo'>\r\n          <input\r\n            style={{ display: \"none\" }}\r\n            id='upload-photo'\r\n            name='upload-photo'\r\n            type='file'\r\n            accept='.jpeg,.jpg,.png,.pdf'\r\n            onChange={handleImageUpload}\r\n            ref={fileRef}\r\n          />\r\n\r\n          <IconButton\r\n            color='primary'\r\n            aria-label='upload fil'\r\n            onClick={(e) => fileRef.current && fileRef.current.click()}\r\n          >\r\n            <PhotoCameraIcon />\r\n          </IconButton>\r\n        </label>\r\n      </Grid>\r\n      <Grid item xs={5}>\r\n        {overnat_tegning_filnavn && (\r\n          <Chip\r\n            variant='outlined'\r\n            label={_substr(overnat_tegning_filnavn)}\r\n            size='medium'\r\n            color='secondary'\r\n            onDelete={(x) => deleteImage()}\r\n          />\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\nimport { KeyboardTimePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Grid } from \"@material-ui/core\";\nimport { FormularContext } from \"../context/FormContext\";\n\nfunction DateInput({ size, id, title, label }) {\n  const [state, setValue, setValues] = useContext(FormularContext);\n\n  const handleDateChange = (date) => {\n    if (date < new Date()) return;\n\n    switch (id) {\n      case \"overnat_start_dato\":\n        let startDate = new Date(date);\n        let slutDato = new Date(state.overnat_slut_dato);\n\n        // Ensure overnat_slut_dato is not more than 7 days later than overnat_start_dato\n        let maxEndDate = new Date(startDate);\n        maxEndDate.setDate(startDate.getDate() + 7);\n        let endDate = slutDato > maxEndDate ? maxEndDate : slutDato;\n\n        setValues({\n          overnat_start_dato: startDate,\n          overnat_slut_dato: endDate,\n          overnat_start_tid: startDate,\n          overnat_slut_tid: endDate,\n        });\n        break;\n      case \"overnat_slut_dato\":\n        if (new Date(date) < new Date(state.overnat_start_dato)) return;\n\n        // Ensure overnat_slut_dato is not more than 7 days later than overnat_start_dato\n        let maxEndDateSlut = new Date(state.overnat_start_dato);\n        maxEndDateSlut.setDate(state.overnat_start_dato.getDate() + 7);\n        let endDateSlut = new Date(date) > maxEndDateSlut ? maxEndDateSlut : new Date(date);\n\n        setValue(\"overnat_slut_dato\", endDateSlut);\n        setValue(\"overnat_slut_tid\", endDateSlut);\n        break;\n      default:\n        return;\n    }\n  };\n  return (\n    <Grid item xs={size}>\n      <KeyboardDatePicker\n        format='yyyy-MM-dd'\n        margin='normal'\n        id={id}\n        label={\n          <Typography variant='h6' component='h3'>\n            {title}\n          </Typography>\n        }\n        value={state[id]}\n        onChange={handleDateChange}\n        KeyboardButtonProps={{\n          \"aria-label\": { label },\n        }}\n        cancelLabel='Annulere'\n      />\n    </Grid>\n  );\n}\n\nfunction TimeInput({ size, id, title, label }) {\n  const [state, setValue, setValues] = useContext(FormularContext);\n  const handleTimeChange = (time) => {\n    setValue(id, new Date(time));\n  };\n\n  return (\n    <Grid item xs={size}>\n      <KeyboardTimePicker\n        margin='normal'\n        id={id}\n        label={\n          <Typography variant='h6' component='h3'>\n            {title}\n          </Typography>\n        }\n        ampm={false}\n        value={state[id]}\n        onChange={handleTimeChange}\n        KeyboardButtonProps={{\n          \"aria-label\": \"ændre tidspunkt\",\n        }}\n      />\n    </Grid>\n  );\n}\n\nexport default function DateTimeInputs() {\n  return (\n    <>\n      <DateInput id='overnat_start_dato' title='Start dato' size={6} />\n      <TimeInput id='overnat_start_tid' title='Start tidspunkt' size={6} />\n      <DateInput id='overnat_slut_dato' title='Slut dato (max. 7 døgn)' size={6} />\n      <TimeInput id='overnat_slut_tid' title='Slut tidspunkt' size={6} />\n    </>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Grid, TextField, Typography, MenuItem } from \"@material-ui/core\";\nimport { FormularContext } from \"../context/FormContext\";\n\nconst kommuner = [\n  {\n    value: \"Aarhus\",\n    nummer: 751,\n  },\n//   {\n//     value: \"Favrskov\",\n//     nummer: 710,\n//   },\n//   {\n//     value: \"Nordjurs\",\n//     nummer: 707,\n//   },\n  {\n    value: \"Odder\",\n    nummer: 727,\n  },\n  {\n    value: \"Samsø\",\n    nummer: 741,\n  },\n  {\n    value: \"Skanderborg\",\n    nummer: 746,\n  },\n//   {\n//     value: \"Syddjurs\",\n//     nummer: 706,\n//   },\n//   {\n//     value: \"Randers\",\n//     nummer: 730,\n//   },\n];\n\nexport default function SelectInput({\n  size,\n  id,\n  title,\n  setKomkode,\n  setAdresseTekst,\n}) {\n  const [state, setValue, setValues] = useContext(FormularContext);\n  const handleSelect = (e) => {\n    const [nr, val] = e.target.value.split(\"_\");\n    setValues({\n      overnat_kommune: e.target.value,\n      overnat_adresse: \"\",\n      the_geom: \"\",\n    });\n    setKomkode(nr);\n    setAdresseTekst(\"\");\n  };\n\n  return (\n    <Grid item xs={size}>\n      <TextField\n        id={id}\n        select\n        value={state.overnat_kommune}\n        InputLabelProps={{ shrink: true }}\n        label={\n          <Typography variant='h6' component='h3'>\n            {title}\n          </Typography>\n        }\n        onChange={handleSelect}\n        fullWidth\n      >\n        {kommuner.map((option) => (\n          <MenuItem\n            key={option.nummer}\n            value={`${option.nummer}_${option.value}`}\n          >\n            {option.value}\n          </MenuItem>\n        ))}\n      </TextField>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { Grid, Button } from \"@material-ui/core\";\n\nexport default function SubmitButton({ onClick }) {\n  return (\n    <>\n      <Grid item xs={2}></Grid>\n      <Grid item xs={8}>\n        <Button variant='contained' color='primary' onClick={onClick}>\n          Godkend og indsend anmeldelse om midlertidig overnatning\n        </Button>\n      </Grid>\n      <Grid item xs={2}></Grid>\n    </>\n  );\n}\n","import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Checkbox, Typography } from \"@material-ui/core\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport daLocale from \"date-fns/locale/da\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport * as yup from \"yup\";\r\nimport DawaSearcher from \"./DawaSearcher\";\r\nimport ErrorComp from \"./ErrorComp\";\r\nimport SuccessAlert from \"./SuccessAlert\";\r\nimport TextInput from \"./components/TextInput\";\r\nimport { FormularContext } from \"./context/FormContext\";\r\nimport ImageUpload from \"./components/ImageUpload\";\r\nimport DateTimeInputs from \"./components/DateInput\";\r\nimport SelectInput from \"./components/SelectInput\";\r\nimport SubmitButton from \"./components/SubmitButton\";\r\nimport { postData, postFormData } from \"./service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    margin: 25,\r\n  },\r\n}));\r\n\r\nconst buildQuery = (data) => {\r\n  const keys = Object.keys(data);\r\n  const columns = keys.join(\",\");\r\n  const values = keys\r\n    .map((key) => {\r\n      if (\r\n        key === \"overnat_start_dato\" ||\r\n        key === \"overnat_slut_dato\" ||\r\n        key === \"overnat_start_tid\" ||\r\n        key === \"ansoegn_indsendt\" ||\r\n        key === \"overnat_slut_tid\"\r\n      ) {\r\n        return `'${formatedTimestamp(data[key])}'`;\r\n      }\r\n      if (key === \"the_geom\") return `${data[key]}`;\r\n\r\n      return `'${data[key]}'`;\r\n    })\r\n    .join(\",\");\r\n  return `INSERT INTO faelles.midlertidig_overnatning(${columns}) VALUES(${values})`;\r\n};\r\n\r\nconst formatedTimestamp = (d) => {\r\n  const date = new Date(d).toISOString().split(\"T\")[0];\r\n  const time = new Date(d).toTimeString().split(\" \")[0];\r\n  return `${date} ${time}`;\r\n};\r\n\r\nfunction Formular() {\r\n  const [state, setValue, setValues, resetForm] = useContext(FormularContext);\r\n  const fileRef = React.useRef(null);\r\n  const classes = useStyles();\r\n  const [data, setData] = useState({\t\r\n    bemaerkning: \"\",\r\n    ansoeger_mail: \"\",\r\n    ansoeger_navn: \"\",\r\n    ansoeger_tlf: \"\",\r\n    ansoegn_indsendt: \"\",\r\n    ansvarl_kontaktmail: \"\",\r\n    ansvarl_kontaktpers: \"\",\r\n    ansvarl_kontaktlf: \"\",\r\n    overnat_adresse: \"\",\r\n    overnat_antal: \"\",\r\n    overnat_kommune: \"\",\r\n    overnat_lokaler: \"\",\r\n    overnat_navn: \"\",\r\n    overnat_over_150: false,\r\n    overnat_slut_dato: new Date().toISOString(),\r\n    overnat_slut_tid: new Date().toISOString(),\r\n    overnat_start_dato: new Date().toISOString(),\r\n    overnat_start_tid: new Date().toISOString(),\r\n    overnat_tegning: \"\",\r\n    overnat_tegning_filnavn: \"\",\r\n    the_geom: \"\",\r\n    gid: \"\",\r\n    file: \"\",\r\n  });\r\n\r\n  let schema = yup.object().shape({\r\n    overnat_kommune: yup.string().required(\"Vælg kommune, for at kunne vælge adresse\"),\r\n    overnat_adresse: yup.string().required(\"Overnatningstedets adresse er et krævet felt\"),\r\n    overnat_navn: yup.string().required(\"Overnatningstedets navn er et krævet felt\"),\r\n    overnat_lokaler: yup.string().required(\"Lokaler er et krævet felt\"),\r\n\tovernat_over_150: yup.string().required(),\r\n\tbemaerkning: yup.string(),\r\n    overnat_antal: yup\r\n\t  .number(\"Antal overnattende skal udfyldes med et tal\")\r\n\t  .typeError(\"Antal overnattende skal udfyldes med et tal\")\r\n\t  .positive(\"Antal overnattende skal udfyldes med et positivt tal.\")\r\n\t  .integer(\"Antal overnattende skal udfyldes med et tal\"),\r\n    ansoeger_navn: yup\r\n      .string()\r\n      .required(\"Anmelder navn er et krævet felt\"),\r\n    ansoeger_tlf: yup\r\n      .string()\r\n      .matches(/^[0-9]{8}$/, \"Anmelder tlf. skal have 8 tal\"),\r\n\tansoeger_mail: yup\r\n      .string()\r\n\t  .email(\"Anmelder mail skal være en valid email adresse\")\r\n      .required(\"Anmelder mail er et krævet felt\"),\r\n\tansvarl_kontaktpers: yup\r\n      .string()\r\n      .required(\"Navn på kontaktperson under overnatningen er et krævet felt\"),\r\n    ansvarl_kontaktlf: yup\r\n      .string()\r\n      .matches(/^[0-9]{8}$/, \"Tlf. til kontaktperson skal have 8 tal\"),\r\n    ansvarl_kontaktmail: yup\r\n      .string()\r\n      .email(\"Mail til kontaktperson skal være en valid email adresse\")\r\n      .required(\"Mail til kontaktperson mail er et krævet felt\"),    \r\n    // overnat_tegning : yup.string().required(),\r\n    // overnat_tegning_filnavn : yup.string().required(),\r\n    overnat_slut_dato: yup.string().required(),\r\n    overnat_slut_tid: yup.string().required(),\r\n    overnat_start_dato: yup.string().required(),\r\n    overnat_start_tid: yup.string().required(),\r\n\tbemaerkning: yup.string(),\r\n  });\r\n\r\n  const [komkode, setKomkode] = useState(\"751|741|727|746\");\r\n  const [imageSrc, setImageSrc] = useState(\"\");\r\n  const [formErrors, setFormErrors] = useState([]);\r\n  const [successMessage, setSuccessMessage] = useState(false);\r\n\r\n  // const handleInputChange = (e) => {};\r\n\r\n  // const { register, handleSubmit, watch, errors } = useForm();\r\n  // const onSubmit = (data) => console.log(data);\r\n  // const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n\r\n  // const deleteImage = () => {\r\n  //   setData({\r\n  //     ...data,\r\n  //     overnat_tegning_filnavn: \"\",\r\n  //   });\r\n\r\n  //   setImageSrc(\"\");\r\n  // };\r\n\r\n  // const handleDateChange = (date) => {\r\n  //   setSelectedDate(date);\r\n  // };\r\n\r\n  // const handleStartDate = (date) => {\r\n  //   let startDate = new Date(date);\r\n  //   let slutDato = new Date(data.overnat_slut_dato);\r\n  //   let endDate = slutDato < startDate ? startDate : slutDato;\r\n  //   console.log(\"startDate :\", startDate, \" , endDate : \", endDate);\r\n  //   setData({\r\n  //     ...data,\r\n  //     overnat_start_dato: startDate.toISOString(),\r\n  //     overnat_slut_dato: endDate.toISOString(),\r\n  //   });\r\n  // };\r\n\r\n  // const handleStartTime = (date) => {\r\n  //   setData({\r\n  //     ...data,\r\n  //     overnat_start_tid: new Date(date).toISOString(),\r\n  //   });\r\n  // };\r\n\r\n  // const handleEndDate = (date) => {\r\n  //   let endDate = new Date(date);\r\n  //   let startDate = new Date(data.overnat_start_dato);\r\n  //   setData({\r\n  //     ...data,\r\n  //     overnat_slut_dato: new Date(date).toISOString(),\r\n  //   });\r\n  // };\r\n\r\n  // const handleEndTime = (date) => {\r\n  //   setData({\r\n  //     ...data,\r\n  //     overnat_slut_tid: new Date(date).toISOString(),\r\n  //   });\r\n  // };\r\n\r\n  // const handleSelect = (e) => {\r\n  //   const [nr, val] = e.target.value.split(\"_\");\r\n  //   console.log(\"kommune selected: \", e.target.value);\r\n  //   setData({\r\n  //     ...data,\r\n  //     overnat_kommune: e.target.value,\r\n  //     overnat_adresse: \"\",\r\n  //     the_geom: \"\",\r\n  //   });\r\n  //   setKomkode(nr);\r\n  //   setAdresseTekst(\"\");\r\n  // };\r\n\r\n  const setAdressData = (adress) => {\r\n    //console.log(`[${adress.adgangsadresse.x},${adress.adgangsadresse.x}]`);\r\n    // if (adress === \"\") {\r\n    //   setData({\r\n    //     ...data,\r\n    //     overnat_adresse: \"\",\r\n    //     the_geom: \"\",\r\n    //   });\r\n    // } else {\r\n    //   setData({\r\n    //     ...data,\r\n    //     overnat_adresse: adress.tekst,\r\n    //     the_geom: `[${adress.adgangsadresse.x},${adress.adgangsadresse.y}]`, // TODO: post geometry\r\n    //   });\r\n    // }\r\n    //ST_setsrid(ST_MakePoint(lat,long),4326) as geom\r\n    //the_geom: `[${adress.adgangsadresse.x},${adress.adgangsadresse.y}]`,\r\n\r\n    if (adress === \"\") {\r\n      setValues({\r\n        overnat_adresse: \"\",\r\n        overnat_postnr: \"\",\r\n        overnat_by: \"\",\r\n        the_geom: \"\",\r\n        x_coord: \"\",\r\n        y_coord: \"\",\r\n      });\r\n    } else {\r\n      let streetname = adress.tekst.split(\",\");\r\n      let adressname = streetname.length > 0 ? streetname[0] : adress.tekst;\r\n      setValues({\r\n        overnat_adresse: adressname,\r\n        overnat_postnr: adress.adgangsadresse.postnr,\r\n        overnat_by: adress.adgangsadresse.postnrnavn,\r\n        the_geom: `ST_setsrid(ST_MakePoint(${adress.adgangsadresse.x},${adress.adgangsadresse.y}),25832)`,\r\n        x_coord: adress.adgangsadresse.x,\r\n        y_coord: adress.adgangsadresse.y,\r\n      });\r\n    }\r\n  };\r\n\r\n  // const handleFormData = (e) => {\r\n  //   console.log(e.target.id, \":\", e.target.value);\r\n  //   setData({\r\n  //     ...data,\r\n  //     [e.target.id]: e.target.value,\r\n  //   });\r\n  // };\r\n\r\n  const handleCheckBox = (e) => {\r\n    console.log(\"handleCheckbox => \", e.target.value);\r\n    setValue(\"overnat_over_150\", e.target.checked);\r\n  };\r\n\r\n  const [adresseTekst, setAdresseTekst] = useState(\"\");\r\n\r\n  const submitHandler = (e) => {\r\n    /*\r\n     * 1. collect all the data to send, including base64 string\r\n       2. create geom ST_setsrid(ST_MakePoint(lat,long),4326) as geom\r\n       3. build sql, axios.post\r\n       4. Success or Error => show feedback \r\n     */\r\n    // console.log(data);\r\n    const formData = {\r\n      ...state,\r\n      ansoegn_indsendt: new Date(),\r\n    };\r\n    console.log(\"ansøgning\", formData);\r\n    schema\r\n      .validate(formData, { abortEarly: false })\r\n      .then(function (valid) {\r\n        //alert(\"schame validity =>\" + valid);\r\n        const q = buildQuery(formData);\r\n        //postData(q)\r\n        postFormData(formData)\r\n          .then((res) => {\r\n            setSuccessMessage(true);\r\n            setFormErrors([]);\r\n            setAdresseTekst(\"\");\r\n            setKomkode(\"751|741|727|746\");\r\n            resetForm();\r\n            window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n          })\r\n          .catch((err) => {\r\n            setFormErrors([\"Der var fejl ved indsending...\"]);\r\n            setSuccessMessage(false);\r\n            window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n          });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err.errors);\r\n        setFormErrors(err.errors);\r\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={daLocale}>\r\n      <Container maxWidth='sm'>\r\n        <Typography variant='h6' gutterBottom>\r\n          Anmeldelse af midlertidig overnatning\r\n        </Typography>\r\n        {formErrors.length > 0 && (\r\n          <ErrorComp errors={formErrors} closeAlert={setFormErrors} />\r\n        )}\r\n\r\n        {successMessage && <SuccessAlert closeAlert={setSuccessMessage} />}\r\n\r\n        <Grid container spacing={3}>\r\n          <SelectInput\r\n            size={12}\r\n            id='overnat_kommune'\r\n            title='Hvilken kommune'\r\n            setKomkode={setKomkode}\r\n            setAdresseTekst={setAdresseTekst}\r\n          />\r\n          <DawaSearcher\r\n            size={12}\r\n            setAdressData={setAdressData}\r\n            komkode={komkode}\r\n            adresseTekst={adresseTekst}\r\n            setAdresseTekst={setAdresseTekst}\r\n          />\r\n          <TextInput\r\n            size={12}\r\n            id='overnat_navn'\r\n            title='Overnatningstedets navn'\r\n          />\r\n          <TextInput size={12} id='overnat_lokaler' title='Lokaler (navn på de lokaler overnatningen foregår i)' />\r\n          <Grid item xs={8}>\r\n            <Typography\r\n              style={{ color: \"rgba(0, 0, 0, 0.74)\" }}\r\n              variant='subtitle1'\r\n              component='h3'\r\n            >\r\n              Overnatning for flere end 50 i samme rum{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Checkbox\r\n              color='primary'\r\n              checked={state.overnat_over_150}\r\n              onChange={handleCheckBox}\r\n            />\r\n          </Grid>\r\n          {state.overnat_over_150 && \r\n\t\t  <Grid item xs={12}>\r\n\t\t  <Typography style={{ color: \"rgba(0, 0, 0, 0.74)\", fontSize: \"0.9em\" }}>\r\n\t\t  Overnatninger i rum til mere end 50 personer skal ske efter en belægningsplan, så det sikres, at de fornødne flugtvejspassager til udgangsdøre ikke spærres af sovepladser, inventar, bagage m.m. Belægningsplanen skal ophænges i overnatningslokalet. Belægningsplaner til rum for midlertidig overnatning kan udføres som beskrevet i <a href=\"https://bygningsreglementet.dk/-/media/Br/Kap_5_Brand/Vejledninger/Bilag-11b--Praccepterede-lsninger-for-midlertidig-overnatning-i-bygninger--version-10.pdf\">Bilag 11b: Præ-acceptable løsninger for midlertidige overnatninger i bygninger</a> – appendiks C: Belægningsplan\r\n\t\t  </Typography>\r\n\t\t  </Grid>\r\n\t\t  }\r\n\t\t  \r\n\t\t  \t  \r\n          <TextInput\r\n            size={12}\r\n            id='overnat_antal'\r\n            type='number'\r\n            title='Antal overnattende'\r\n          />\r\n\t\t  <Grid item xs={12}>\r\n\t\t  <Typography style={{ color: \"rgba(0, 0, 0, 0.74)\", fontSize: \"0.9em\" }}>\r\n          I bygningsafsnit, der indrettes til flere end 150 overnattende personer, skal der være en fast, vågen vagt, som skal foretage inspektionsrunder.\r\n\t\t  </Typography>\r\n\t\t  </Grid>\r\n          <DateTimeInputs />\r\n          <TextInput size={12} id='ansoeger_navn' title='Anmelder navn' />\r\n          <TextInput\r\n            type='number'\r\n            size={6}\r\n            id='ansoeger_tlf'\r\n            title='Anmelder tlf.'\r\n          />\r\n          <TextInput size={6} id='ansoeger_mail' title='Anmelder mail' />\r\n          <Grid item xs={12}></Grid>\r\n          <TextInput\r\n            size={12}\r\n            id='ansvarl_kontaktpers'\r\n            title='Navn på kontaktperson under overnatningen'\r\n          />\r\n          <TextInput\r\n            type='number'\r\n            size={6}\r\n            id='ansvarl_kontaktlf'\r\n            title='Tlf. til kontaktperson'\r\n          />\r\n          <TextInput\r\n            size={6}\r\n            id='ansvarl_kontaktmail'\r\n            title='Mail til kontaktperson'\r\n          />\r\n\t\t  <TextInput\r\n            size={12}\r\n            id='bemaerkning'\r\n            title='Bemærkninger'\r\n          />\r\n\t\t  \r\n\t\t  <ImageUpload setImageSrc={setImageSrc} />\r\n\t\t  \r\n\t\t  <Grid item xs={12}>\r\n\t\t  <Typography style={{ color: \"rgba(0, 0, 0, 0.74)\", fontSize: \"0.9em\" }}>\r\n          Den ansvarlige for overnatningen forpligter sig til følgende:\r\n\t\t  <ul>\r\n\t\t  <li>At der rettidigt er fremsendt meddelelse om den midlertidige overnatning til kommunalbestyrelsen.</li>\r\n\t\t  <li>At den midlertidige overnatning sker i overensstemmelse med retningslinjerne i <a href=\"https://bygningsreglementet.dk/-/media/Br/Kap_5_Brand/Vejledninger/Bilag-11b--Praccepterede-lsninger-for-midlertidig-overnatning-i-bygninger--version-10.pdf\">Bilag 11b: Præ-acceptable løsninger for midlertidige overnatninger i bygninger</a> eller retningslinjerne i byggeriets DKV-plan for midlertidig overnatning.</li>\r\n\t\t  <li>At ordensregler er udarbejdet som opslag, der er ophængt i tilknytning til brand- og evakueringsinstruksen.</li>\r\n\t\t  <li>At der for overnatninger med børn og unge under 18 år er en myndig person til stede ved overnatningen og at den eller de myndige personer ved midlertidig overnatning for børn og unge under 18 år er bekendt med ordensreglerne.</li>\r\n\t\t  <li>At der er udarbejdet og ophængt brand- og evakueringsinstruks.</li>\r\n\t\t  <li>At der er udarbejdet driftsjournal, som kontrolleres hver dag ved overnatning over flere døgn. </li>\r\n\t\t  <li>At der er udarbejdet og ophængt en belægningsplan for overnatningslokaler til flere end 50 overnattende personer.</li>\r\n\t\t  <li>At der i bygningsafsnit, der indrettes til flere end 150 overnattende personer, etableres fast, vågen vagt, som skal foretage inspektionsrunder.</li>\r\n\t\t  <li>At den/de faste vågne, vagter er instrueret om deres opgave, alarmeringsmuligheder, brand- og evakueringsinstruks mv.</li>\r\n\t\t  <li>At hvis ansvar er overdraget til tredjepart, skal det sikres at den ansvarlige for overnatningen har modtaget kopi af anmeldelsen og godkendt indholdet.</li>\r\n\t\t  </ul>\r\n\t\t  </Typography>\r\n</Grid>\r\n          <SubmitButton onClick={submitHandler} />\r\n        </Grid>\r\n      </Container>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\nexport default Formular;\r\n","import axios from \"axios\";\n\nconst url = \"https://geocloud.beredskabskort.dk/api/v2/sql/geo\";\nconst url1 = \"http://localhost:8080/extensions/beredskab/controller/formular\";\nconst key = \"fbb2d411cfbc7b706c02359402afe195\";\nconst extUrl =\n  \"https://geocloud.beredskabskort.dk/extensions/beredskab/controller/formular\";\n\nexport const postData = (query) => {\n  const payload = { q: query, key: key, srs: \"25832\" };\n  return axios.post(url, payload);\n};\n\nexport const postFormData = (data) => {\n  data[\"overnat_over_150\"] = data[\"overnat_over_150\"].toString();\n  return axios.post(extUrl, data);\n};\n","import React from \"react\";\nimport Formular from \"./Formular\";\nimport { FormularProvider } from \"./context/FormContext\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className='App'>\n      <FormularProvider>\n        <Formular />\n      </FormularProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}